{"version":3,"sources":["assets/logo.svg","assets/404.svg","components/Navbar.js","components/App.js","serviceWorker.js","pages/Home.js","pages/Blog.js","pages/Support.js","pages/Downloads.js","index.js","pages/NotMatch.js"],"names":["module","exports","Navbar","useState","open","setOpen","className","to","src","Logo","alt","onClick","viewBox","xmlns","d","isMobile","App","children","style","backgroundColor","minHeight","Boolean","window","location","hostname","match","Home","BlogItem","title","timestamp","Blog","map","item","index","key","InfoCard","text","link","linktitle","class","href","QnA","Support","Downloads","ReactDOM","render","exact","path","component","NotMatchImg","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.416d159f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.94b24de4.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.6695af99.svg\";","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { isMobile } from 'react-device-detect'\r\nimport Logo from '../assets/logo.svg'\r\n\r\nconst Navbar = () => {\r\n  const [open, setOpen] = useState(false)\r\n  return (\r\n    <nav className='flex items-center justify-between flex-wrap bg-transparency p-6'>\r\n      <Link className='flex items-center flex-shrink-0 text-white mr-6' to='/'>\r\n        <img src={Logo} alt='logo' className='fill-current h-12 w-12 mr-2' />\r\n        <span className='font-semibold text-xl tracking-tight'>\r\n          SoundRequest\r\n        </span>\r\n      </Link>\r\n      <div className='block lg:hidden'>\r\n        <button\r\n          onClick={() => {\r\n            setOpen(!open)\r\n          }}\r\n          className='flex items-center px-3 py-2 border rounded  border-white hover:text-white hover:border-white'>\r\n          <svg\r\n            className='fill-current h-3 w-3'\r\n            viewBox='0 0 20 20'\r\n            xmlns='http://www.w3.org/2000/svg'>\r\n            <title>Menu</title>\r\n            <path d='M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z' />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      {open || !isMobile ? (\r\n        <div className='w-full block flex-grow lg:flex lg:items-center lg:w-auto'>\r\n          <div className='text-md lg:flex-grow'>\r\n            <Link\r\n              to='/Blog'\r\n              className='block mt-4 lg:inline-block lg:mt-0  hover:text-white mr-4'>\r\n              블로그\r\n            </Link>\r\n            <Link\r\n              to='/Support'\r\n              className='block mt-4 lg:inline-block lg:mt-0  hover:text-white mr-4'>\r\n              지원\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <Link\r\n              to='/Downloads'\r\n              className='inline-block text-sm px-4 py-2 leading-none border rounded text-white border-white hover:border-transparent hover:text-gray-800 hover:bg-white mt-4 lg:mt-0'>\r\n              Downloads\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport Navbar from './Navbar'\r\n\r\nconst App = ({ children }) => {\r\n  return (\r\n    <div\r\n      className='App text-white'\r\n      style={{ backgroundColor: '#1C2833', minHeight: '100vh' }}>\r\n      <Navbar />\r\n      <div className='container mx-auto'>{children}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='text-center'>\r\n      <div className='text-6xl font-bold'>Sound Request</div>\r\n      <div className=\"mt-4 text-xl\">스트리머를 위한 음원 및 BGM 관리</div>\r\n      <div className=\"mt-8\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst Blog = () => {\r\n  const BlogList = [{}]\r\n  return (\r\n    <div>\r\n      {BlogList.map((item, index) => (\r\n        <BlogItem {...item} key={index} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst BlogItem = ({ title, timestamp }) => {\r\n  return <div></div>\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\n\r\nconst Support = () => {\r\n  const faqList = [\r\n    {\r\n      title: 'SoundRequest는 뭐하는 앱인가요?',\r\n      text: '몰라 나보고 묻지마'\r\n    },\r\n    {\r\n      title: '어떻게 하면 프로젝트에 기여할 수 있을까요?',\r\n      text: 'Github에 방문하여주세요'\r\n    }\r\n  ]\r\n\r\n  const infoList = [\r\n    {\r\n      title: 'Discord',\r\n      text: '디스코드 서버에 가입하여 도움을 받으세요!',\r\n      link: 'https://github.com/SoundRequest',\r\n      linktitle: '{준비중}'\r\n    },\r\n    {\r\n      title: 'source',\r\n      text: 'Github 레포에서 소스코드를 확인하실 수 있습니다',\r\n      link: 'https://github.com/SoundRequest',\r\n      linktitle: 'Github'\r\n    },\r\n    {\r\n      title: 'ApiDocs',\r\n      text: '개발자들을 위한 APi문서',\r\n      link: 'https://github.com/SoundRequest',\r\n      linktitle: '{준비중}'\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className='text-center'>\r\n      <div class='grid grid-flow-row grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 mx-auto'>\r\n        {infoList.map((item, index) => (\r\n          <InfoCard {...item} key={index} />\r\n        ))}\r\n      </div>\r\n\r\n      <div className='text-2xl font-bold my-8'>FAQ</div>\r\n      {faqList.map((item, index) => (\r\n        <QnA {...item} key={index} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst InfoCard = ({ title, text, link, linktitle }) => {\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <div class='w-full rounded overflow-hidden border'>\r\n        <div class='px-6 py-4'>\r\n          <div class='font-bold text-xl mb-2'>{title}</div>\r\n          <p class='text-gray-200 text-base'>{text}</p>\r\n          <div className='mt-4'>\r\n            <a href={link}>{linktitle}</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst QnA = ({ title, text }) => {\r\n  return (\r\n    <>\r\n      <div className='text-left mb-4'>\r\n        <div className='text-lg mb-1'>{title}</div>\r\n        <div>{text}</div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Support\r\n","import React from 'react'\r\n\r\nconst Downloads = () => {\r\n  return (\r\n    <div className='text-center'>\r\n      <div className='text-3xl font-bold mb-2'>Downloads</div>\r\n      <div className='text-lg mb-12'>\r\n        운영체제에 맞는 다운로드를 선택해주세요\r\n      </div>\r\n      <div className='mx-auto'>\r\n        <a\r\n          class='bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mx-4'\r\n          href='#'>\r\n          <svg\r\n            class='fill-current w-4 h-4 mr-2'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            viewBox='0 0 20 20'>\r\n            <path d='M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z' />\r\n          </svg>\r\n          윈도우 인스톨러\r\n        </a>\r\n        <a\r\n          class='bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mx-4'\r\n          href='#'>\r\n          <svg\r\n            class='fill-current w-4 h-4 mr-2'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            viewBox='0 0 20 20'>\r\n            <path d='M13 8V2H7v6H2l8 8 8-8h-5zM0 18h20v2H0v-2z' />\r\n          </svg>\r\n          맥 OS (준비중)\r\n        </a>\r\n        <a\r\n          class='bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center mx-4'\r\n          href='#'>\r\n          이전버전 다운로드\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Downloads\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport './assets/main.css'\nimport './index.css'\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport Blog from './pages/Blog'\nimport Support from './pages/Support'\nimport Downloads from './pages/Downloads'\nimport NotMatch from './pages/NotMatch'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/Blog' component={Blog} />\n        <Route path='/Support' component={Support} />\n        <Route path='/Downloads' component={Downloads} />\n        <Route component={NotMatch} />\n      </Switch>\n    </App>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\r\nimport NotMatchImg from '../assets/404.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"mt-24\">\r\n      <img src={NotMatchImg} alt='404' className='w-64 h-64 mx-auto' />\r\n      <div className='text-center text-xl mb-4'>페이지를 찾을 수 없습니다</div>\r\n      <div className='text-center'>\r\n        <Link to='/' className='hover:text-gray-300'>\r\n          메인으로 가기\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}